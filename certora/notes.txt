
// questions / observations:
MerkleMinter.claimKatToken can be called with amount = 0
KatToken.distributeInflation: wouldn't it be better to add a check block.timestamp > lastMintCapacityIncrease at the beginning to save execution of the other commands?
KatToken.distributeInflation: is the check on line 133 needed?
KatToken.distributeMintCapacity are the checks on lines 144 and 145 needed?
KatToken.distributeMintCapacity can we use unchecked instead?
KatToken: line 115 can't we have >= instead of > ?
wrong comment in KatToken.distributeInflation line 132, it should be before line 129
inflationBeneficiary and inflationAdmin: wouldn't it be better to use the existing Ownable interface?
    - the new owner cannot decline
there's no check that merkleMinter is actually a MerkleMinter contract

// properties:
----------------
Powutil:

exp2(x) == 2^x (or differs by at most 1e18, etc.), only for x < 1.03 * 1000 years
exp2(x + y) == exp2(x) * exp2(y)

----------------
merkleminter:

kattoken cannot be changed                                                  done
locked can only change from true -> false                                   done
rootSetter can only change from x -> 0                                      done
root can only change once
only rootSetter can call init                                               done
only unlocker can call unlock                                               done
claimKatToken cannot be called before unlockTime unless already unlocked    done
claimKatToken will increase receiver's balance when executed succesfully    

----------------
kattoken:

only certain methods may increase/decrease total mint capacity  done
total mint capacity + mintedTokens can only increase            done
lastMintCapacityIncrease can only increase                      done
distributedSupplyCap can only increase                          done
distributedSupplyCap == total mint capacity + mintedTokens      done
for all x: mintCapacity[x] <= distributedSupplyCap              done
inflation is less than MAX_INFLATION                            done
inflationBeneficiary and inflationAdmin != 0                    done violated
only inflationBeneficiary and inflationAdmin can change inflationBeneficiary and inflationAdmin respectively                                      done

summarise _mint, keep track of balances in CVL
summarise MerklerProof.verify to nondet

exp2 error max 10 tokens per year
